syntax = "proto3";

package org.volunteered.libs.proto.organization.v1;

option java_multiple_files = true;
option java_outer_classname = "OrganizationServiceProto";
option java_package = "org.volunteered.libs.proto.organization.v1";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "org/volunteered/libs/proto/common/v1/common.proto";

service OrganizationService {
  rpc CreateOrganization(CreateOrganizationRequest) returns (org.volunteered.libs.proto.common.v1.Organization);
  rpc CreateOrganizationSubsidiary(CreateOrganizationSubsidiaryRequest)
      returns (org.volunteered.libs.proto.common.v1.OrganizationSubsidiary);
  rpc GetOrganizationById(GetOrganizationRequest) returns (org.volunteered.libs.proto.common.v1.Organization);
  rpc SearchOrganizationByName(SearchOrganizationByNameRequest) returns (SearchOrganizationByNameResponse);
  rpc GetOrganizationOrganizationSubsidiaryIds(GetOrganizationOrganizationSubsidiaryIdsRequest) returns
      (GetOrganizationOrganizationSubsidiaryIdsResponse);
  rpc GetOrganizationSubsidiaryById(GetOrganizationSubsidiaryRequest)
    returns (org.volunteered.libs.proto.common.v1.OrganizationSubsidiary);
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (org.volunteered.libs.proto.common.v1.Organization);
  rpc UpdateOrganizationSubsidiary(org.volunteered.libs.proto.common.v1.OrganizationSubsidiary)
    returns (org.volunteered.libs.proto.common.v1.OrganizationSubsidiary);
  rpc DeleteOrganization(DeleteOrganizationRequest) returns (google.protobuf.Empty);
  rpc DeleteOrganizationSubsidiary(DeleteOrganizationSubsidiaryRequest) returns (google.protobuf.Empty);
  rpc OrganizationSubsidiaryExistsById(org.volunteered.libs.proto.common.v1.Id) returns (google.protobuf.BoolValue);
}

message CreateOrganizationRequest {
  int64 creator_id = 1;
  string name = 2;
  string email = 3 [(validate.rules).string.email = true];
  string bio = 4;
  string city = 5;
  string country = 6 [(validate.rules).string = {len: 2}];
}

message CreateOrganizationSubsidiaryRequest {
  int64 creator_id = 1;
  int64 organization_id = 2;
  org.volunteered.libs.proto.common.v1.OrganizationSubsidiary subsidiary = 3;
}

message GetOrganizationRequest {
  int64 id = 1;
}

message SearchOrganizationByNameRequest {
  string name = 1;
}

message SearchOrganizationByNameResponse {
  repeated org.volunteered.libs.proto.common.v1.Organization organizations = 1;
}

message DeleteOrganizationRequest {
  int64 id = 1;
}

message GetOrganizationSubsidiaryRequest {
  int64 id = 1;
}

message DeleteOrganizationSubsidiaryRequest {
  int64 id = 1;
}

message UpdateOrganizationRequest {
  int64 id = 1;
  int64 hq_id = 2;
  string name = 3;
  string email = 4 [(validate.rules).string.email = true];
  string bio = 5;
  string logo = 6;
  string phone = 7;
  org.volunteered.libs.proto.common.v1.WebsiteAndSocialMediaUrls web_and_social_urls = 8;
  int32 founded = 9;
  string industry = 10;
  string founder = 11;
  int32 number_of_employees = 12;
  repeated string benefits = 13;
}

message GetOrganizationOrganizationSubsidiaryIdsRequest {
  int64 organization_id = 1;
}

message GetOrganizationOrganizationSubsidiaryIdsResponse {
  repeated int64 organizationSubsidiaryIds = 1;
}
